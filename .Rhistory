install.packages(c("arules", "arulesViz", "cluster", "colorspace", "evaluate", "forecast", "h2o", "kernlab", "R6", "shiny"))
install.packages(c("acepack", "backports", "curl", "earth", "openssl", "plotmo", "proto", "quantmod", "RcppArmadillo", "reshape2"))
data("airquality")
edit(airquality)
install.packages(“Rserve”)
library(Rserve)
Rserve()
install.packages("Rserve")
library(Rserve)
Rserve()
install.packages(c("caret", "colorspace", "ggplot2", "htmlwidgets", "knitr", "plotly", "plotmo", "scales", "SparseM", "XML", "yaml"))
install.packages('dynamicTreeCut')
install.packages(c("HistData", "rgdal", "tseries", "zoo"))
library(MASS)
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
result1[i]<-meany
result2[i]<-meany + b*(-mean(x[,1]))
}
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
}
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
#result1[i]<-meany
#result2[i]<-meany + b*(-mean(x[,1]))
}
x
result1<-[]
result2<-[]
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
result1[i]<-meany
result2[i]<-meany + b*(-mean(x[,1]))
}
result1[]<-NULL
result2[]<-NULL
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
result1[i]<-meany
result2[i]<-meany + b*(-mean(x[,1]))
}
x[,2]
meany
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
result1[i]<-meany
result2[i]<-meany + b*(-mean(x[,1]))
}
result1[]<-NULL
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
print(meany)
print(meany + b*(-mean(x[,1])))
#result1[i]<-meany
#result2[i]<-meany + b*(-mean(x[,1]))
}
result1[]<-NULL
result2[]<-NULL
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
result1[i]<-meany
result2[i]<-meany + b*(-mean(x[,1]))
}
result1<-NULL
result2<-NULL
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
result1[i]<-meany
result2[i]<-meany + b*(-mean(x[,1]))
}
result1
result2
hist(result1)
hist(result2)
library(MASS)
result1<-NULL
result2<-NULL
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
result1[i]<-meany
result2[i]<-meany + b*(-mean(x[,1]))
}
result1
result2
hist(result1)
hist(result2)
library(twitteR)
user <- getUser('kuanhoong')
library(ROAuth)
setup_twitter_oauth(consumer_key,consumer_secret,access_token,access_secret)
setup_twitter_oauth(consumer_key=consumer_key,consumer_secret=consumer_secret,access_token=access_token,access_secret=access_secret)
setup_twitter_oauth(consumer_key='9vvwdmZHLfv3g5dh6GV79miZK',consumer_secret='Z106DRB05ungt6OTy2Vxskk6VxKhXYaazmBmbHu5GyAMCAJKOv',access_token='2790531-4jGsPZzUFOJ8rwDURALu4MSGsu9IZpy0zWtvdfYIbc',access_secret='FE7mNVQOd8ktXBEqinwEwixkALBJAMvoXyar9UnVWymf3')
user <- getUser('kuanhoong')
user$toDataFrame()
friends <- user$getFriends() # who this user follows
followers <- user$getFollowers() # this user's followers
followers2 <- followers[[1]]$getFollowers() # a follower's followers
user <- getUser('kuanhoong')
friends <- user$getFriends() # who this user follows
followers <- user$getFollowers() # this user's followers
followers2 <- followers[[1]]$getFollowers() # a follower's followers
install.packages("leaflet")
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=3.158431, lat=101.711599, popup="Petronas Twin Tower")
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=101.711599, lat=3.158431, popup="Petronas Twin Tower")
m  # Print the map
churnmodel<-load('churnmodel.rda')
setwd('C:/Users/Kuan/Documents/GitHub/churn-r/')
save(logic_reg, file = 'churnmodel.rda')
churnmodel<-load('churnmodel.rda')
library(data.table)
library(caret)
cust_data1 <- fread('telco1.csv')
cust_data1 <- cust_data1[, -1]
cust_data1$ChurnPrediction <- as.numeric(cust_data1$ChurnPrediction)
cust_data1$ChurnPrediction <- predict(churnmodel, newdata = cust_data1, type = 'class')
help("load")
ls()
churnmodel
logic_reg
library(readr)
x <- read_fwf(
file="http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for",
skip=4,
fwf_widths(c(12, 7, 4, 9, 4, 9, 4, 9, 4)))
View(x)
install.packages('SPSStoR')
