install.packages(c("arules", "arulesViz", "cluster", "colorspace", "evaluate", "forecast", "h2o", "kernlab", "R6", "shiny"))
install.packages(c("acepack", "backports", "curl", "earth", "openssl", "plotmo", "proto", "quantmod", "RcppArmadillo", "reshape2"))
data("airquality")
edit(airquality)
install.packages(“Rserve”)
library(Rserve)
Rserve()
install.packages("Rserve")
library(Rserve)
Rserve()
install.packages(c("caret", "colorspace", "ggplot2", "htmlwidgets", "knitr", "plotly", "plotmo", "scales", "SparseM", "XML", "yaml"))
install.packages('dynamicTreeCut')
install.packages(c("HistData", "rgdal", "tseries", "zoo"))
library(MASS)
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
result1[i]<-meany
result2[i]<-meany + b*(-mean(x[,1]))
}
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
}
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
#result1[i]<-meany
#result2[i]<-meany + b*(-mean(x[,1]))
}
x
result1<-[]
result2<-[]
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
result1[i]<-meany
result2[i]<-meany + b*(-mean(x[,1]))
}
result1[]<-NULL
result2[]<-NULL
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
result1[i]<-meany
result2[i]<-meany + b*(-mean(x[,1]))
}
x[,2]
meany
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
result1[i]<-meany
result2[i]<-meany + b*(-mean(x[,1]))
}
result1[]<-NULL
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
print(meany)
print(meany + b*(-mean(x[,1])))
#result1[i]<-meany
#result2[i]<-meany + b*(-mean(x[,1]))
}
result1[]<-NULL
result2[]<-NULL
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
result1[i]<-meany
result2[i]<-meany + b*(-mean(x[,1]))
}
result1<-NULL
result2<-NULL
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
result1[i]<-meany
result2[i]<-meany + b*(-mean(x[,1]))
}
result1
result2
hist(result1)
hist(result2)
library(MASS)
result1<-NULL
result2<-NULL
for(i in 1:500){
x<-mvrnorm(n=30,mu=c(0,0),Sigma=matrix(c(1,0.5,0.5,1),2,2))
meany<-mean(x[,2])
p<-x[,1]-mean(x[,1])
q<-x[,2]-mean(x[,2])
b<-sum(p*q)/sum(p^2)
result1[i]<-meany
result2[i]<-meany + b*(-mean(x[,1]))
}
result1
result2
hist(result1)
hist(result2)
library(twitteR)
user <- getUser('kuanhoong')
library(ROAuth)
setup_twitter_oauth(consumer_key,consumer_secret,access_token,access_secret)
setup_twitter_oauth(consumer_key=consumer_key,consumer_secret=consumer_secret,access_token=access_token,access_secret=access_secret)
setup_twitter_oauth(consumer_key='9vvwdmZHLfv3g5dh6GV79miZK',consumer_secret='Z106DRB05ungt6OTy2Vxskk6VxKhXYaazmBmbHu5GyAMCAJKOv',access_token='2790531-4jGsPZzUFOJ8rwDURALu4MSGsu9IZpy0zWtvdfYIbc',access_secret='FE7mNVQOd8ktXBEqinwEwixkALBJAMvoXyar9UnVWymf3')
user <- getUser('kuanhoong')
user$toDataFrame()
friends <- user$getFriends() # who this user follows
followers <- user$getFollowers() # this user's followers
followers2 <- followers[[1]]$getFollowers() # a follower's followers
user <- getUser('kuanhoong')
friends <- user$getFriends() # who this user follows
followers <- user$getFollowers() # this user's followers
followers2 <- followers[[1]]$getFollowers() # a follower's followers
install.packages("leaflet")
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=3.158431, lat=101.711599, popup="Petronas Twin Tower")
m  # Print the map
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=101.711599, lat=3.158431, popup="Petronas Twin Tower")
m  # Print the map
setwd('C:/Users/Kuan/Documents/github/churn-r')
library(caret)
library(ggplot2)
library(data.table)
cust_data<-fread.csv('telco.csv', header=TRUE, sep=",")
cust_data<-fread('telco.csv', header=TRUE, sep=",")
View(cust_data)
View(cust_data)
str(cust_data)
View(cust_data)
cust_data$Churn <-replace(cust_data$Churn,cust_data$Churn == No,0)
cust_data$Churn <-replace(cust_data$Churn,cust_data$Churn == "No",0)
cust_data$Churn <-replace(cust_data$Churn,cust_data$Churn == "Yes",0)
View(cust_data)
cust_data<-fread('telco.csv', header=TRUE, sep=",")
cust_data$Churn <-replace(cust_data$Churn,cust_data$Churn == "No",0)
cust_data$Churn <-replace(cust_data$Churn,cust_data$Churn == "Yes",1)
View(cust_data)
recode(cust_data$gender, "'Male'=1, 'Female'=0")
library(car)
recode(cust_data$gender, "'Male'=1, 'Female'=0")
recode(cust_data$gender, "'Male'=1; 'Female'=0")
recode(cust_data$Partner, "'Yes'=1; 'No'=0")
recode(cust_data$Dependents, "'Yes'=1; 'No'=0")
recode(cust_data$PhoneService, "'Yes'=1; 'No'=0")
View(cust_data)
cust_data$gender<-recode(cust_data$gender, "'Male'=1; 'Female'=0")
cust_data$gender<-recode(cust_data$gender, "'Male'=1; 'Female'=0")
cust_data$Partner<-recode(cust_data$Partner, "'Yes'=1; 'No'=0")
cust_data$Dependents<-recode(cust_data$Dependents, "'Yes'=1; 'No'=0")
cust_data$PhoneService <- recode(cust_data$PhoneService, "'Yes'=1; 'No'=0")
cust_data$MultipleLines <- recode(cust_data$MultipleLines, "'Yes'=1; 'No'=0;'No phone service'=3")
str(cust_data)
cust_data$InternetService <- recode(cust_data$InternetService, "'No'=0; 'DSL'=1;'Fiber optic'=2")
cust_data$OnlineSecurity <- recode(cust_data$InternetService, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data<-fread('telco.csv', header=TRUE, sep=",")
cust_data$Churn <-replace(cust_data$Churn,cust_data$Churn == "No",0)
cust_data$Churn <-replace(cust_data$Churn,cust_data$Churn == "Yes",1)
cust_data$gender<-recode(cust_data$gender, "'Male'=1; 'Female'=0")
cust_data$Partner<-recode(cust_data$Partner, "'Yes'=1; 'No'=0")
cust_data$Dependents<-recode(cust_data$Dependents, "'Yes'=1; 'No'=0")
cust_data$PhoneService <- recode(cust_data$PhoneService, "'Yes'=1; 'No'=0")
cust_data$MultipleLines <- recode(cust_data$MultipleLines, "'Yes'=1; 'No'=0;'No phone service'=3")
cust_data$InternetService <- recode(cust_data$InternetService, "'No'=0; 'DSL'=1;'Fiber optic'=2")
cust_data$OnlineSecurity <- recode(cust_data$OnlineSecurity, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data$OnlineBackup <- recode(cust_data$OnlineBackup, "'No'=0; 'Yes'=1;'No internet service'=2")
View(cust_data)
cust_data$DeviceProtection <- recode(cust_data$DeviceProtection, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data$TechSupport <- recode(cust_data$TechSupport, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data$StreamingTV <- recode(cust_data$StreamingTV, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data$StreamingMovies <- recode(cust_data$StreamingMovies, "'No'=0; 'Yes'=1;'No internet service'=2")
str(cust_data)
cust_data$Contract <- recode(cust_data$Contract, "'Month-to-month
'=0; 'One year'=1;'Two year'=2")
cust_data$Contract <- recode(cust_data$Contract, "'Month-to-month'=0; 'One year'=1;'Two year'=2")
str(cust_data)
cust_data$PaperlessBilling<- recode(cust_data$PaperlessBilling, "'Yes'=1; 'No'=0")
str(cust_data)
cust_data$PaymentMethod <- recode(cust_data$PaymentMethod, "'Electronic check'=1; 'Mailed check'=2;'Bank transfer (automatic)'=3; 'Credit card (automatic)'=4")
str(cust_data)
cust_data<-fread('telco.csv', header=TRUE, sep=",")
cust_data$Churn <-as.numeric(replace(cust_data$Churn,cust_data$Churn == "No",0))
cust_data$Churn <-as.numeric(replace(cust_data$Churn,cust_data$Churn == "Yes",1))
str(cust_data)
cust_data<-fread('telco.csv', header=TRUE, sep=",")
str(cust_data)
is.na(cust_data$Churn)
sum(is.na(cust_data$Churn))
cust_data$Churn <-replace(cust_data$Churn,cust_data$Churn == "No",0)
cust_data$Churn <-replace(cust_data$Churn,cust_data$Churn == "Yes",1)
cust_data$Churn<-as.character.numeric_version(cust_data$Churn)
str(cust_data)
cust_data$Churn<-as.numberic(cust_data$Churn)
cust_data$Churn<-as.numeric(cust_data$Churn)
str(cust_data)
#recode using the library(car) package
cust_data$gender<-recode(cust_data$gender, "'Male'=1; 'Female'=0")
cust_data$Partner<-recode(cust_data$Partner, "'Yes'=1; 'No'=0")
cust_data$Dependents<-recode(cust_data$Dependents, "'Yes'=1; 'No'=0")
cust_data$PhoneService <- recode(cust_data$PhoneService, "'Yes'=1; 'No'=0")
cust_data$MultipleLines <- recode(cust_data$MultipleLines, "'Yes'=1; 'No'=0;'No phone service'=3")
cust_data$InternetService <- recode(cust_data$InternetService, "'No'=0; 'DSL'=1;'Fiber optic'=2")
cust_data$OnlineSecurity <- recode(cust_data$OnlineSecurity, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data$OnlineBackup <- recode(cust_data$OnlineBackup, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data$DeviceProtection <- recode(cust_data$DeviceProtection, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data$TechSupport <- recode(cust_data$TechSupport, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data$StreamingTV <- recode(cust_data$StreamingTV, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data$StreamingMovies <- recode(cust_data$StreamingMovies, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data$Contract <- recode(cust_data$Contract, "'Month-to-month'=0; 'One year'=1;'Two year'=2")
cust_data$PaperlessBilling<- recode(cust_data$PaperlessBilling, "'Yes'=1; 'No'=0")
cust_data$PaymentMethod <- recode(cust_data$PaymentMethod, "'Electronic check'=1; 'Mailed check'=2;'Bank transfer (automatic)'=3; 'Credit card (automatic)'=4")
View(cust_data)
setwd('C:/Users/Kuan/Documents/github/churn-r')
library(caret)
library(ggplot2)
library(data.table)
library(car)
#load the data
cust_data<-fread('telco.csv', header=TRUE, sep=",")
#overview of customer data
View(cust_data)
str(cust_data)
#data proprocessing
#replace NAs as 0
cust_data[is.na(cust_data)] <- 0
#replace Churn status, Yes = 1, No = 1
cust_data$Churn <-replace(cust_data$Churn,cust_data$Churn == "No",0)
cust_data$Churn <-replace(cust_data$Churn,cust_data$Churn == "Yes",1)
cust_data$Churn<-as.numeric(cust_data$Churn)
#recode using the library(car) package
cust_data$gender<-recode(cust_data$gender, "'Male'=1; 'Female'=0")
cust_data$Partner<-recode(cust_data$Partner, "'Yes'=1; 'No'=0")
cust_data$Dependents<-recode(cust_data$Dependents, "'Yes'=1; 'No'=0")
cust_data$PhoneService <- recode(cust_data$PhoneService, "'Yes'=1; 'No'=0")
cust_data$MultipleLines <- recode(cust_data$MultipleLines, "'Yes'=1; 'No'=0;'No phone service'=3")
cust_data$InternetService <- recode(cust_data$InternetService, "'No'=0; 'DSL'=1;'Fiber optic'=2")
cust_data$OnlineSecurity <- recode(cust_data$OnlineSecurity, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data$OnlineBackup <- recode(cust_data$OnlineBackup, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data$DeviceProtection <- recode(cust_data$DeviceProtection, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data$TechSupport <- recode(cust_data$TechSupport, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data$StreamingTV <- recode(cust_data$StreamingTV, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data$StreamingMovies <- recode(cust_data$StreamingMovies, "'No'=0; 'Yes'=1;'No internet service'=2")
cust_data$Contract <- recode(cust_data$Contract, "'Month-to-month'=0; 'One year'=1;'Two year'=2")
cust_data$PaperlessBilling<- recode(cust_data$PaperlessBilling, "'Yes'=1; 'No'=0")
cust_data$PaymentMethod <- recode(cust_data$PaymentMethod, "'Electronic check'=1; 'Mailed check'=2;'Bank transfer (automatic)'=3; 'Credit card (automatic)'=4")
str(cust_data)
library(rattle)
library(corrplot)
library(randomForest)
library(rpart)
install.packages('C50')
library(C50)
library(e1071)
summary(cust_data)
corrmatrix <- round(cor(cust_data), digits = 2)
cust_data <- cust_data[,-1]
corrmatrix <- round(cor(cust_data[]), digits = 2)
corrmatrix
qplot(x=var1, y=var2, data=melt(cor(cust_data), use='p')),fill=value, geom='tile')+scale_fill_gradient2(limits=c(-1,1))
cplot(x=var1, y=var2, data=melt(cor(cust_data), use='p')),fill=value, geom='tile')+scale_fill_gradient2(limits=c(-1,1))
cplot(x=var1, y=var2, data=melt(cor(cust_data), use='p'))
qplot(x=var1, y=var2, data=melt(cor(cust_data), use='p'))
qplot(x=Var1, y=Var2, data=melt(cor(data, use="p")), fill=value, geom="tile") +  scale_fill_gradient2(limits=c(-1, 1))
qplot(x=Var1, y=Var2, data=melt(cor(cust_data, use="p")), fill=value, geom="tile") +  scale_fill_gradient2(limits=c(-1, 1))
intrain<-createDataPartition(y=cust_data$Churn,p=0.8,list=FALSE)
training<-m_train[intrain,]
testing<-m_train[-intrain,]
intrain<-createDataPartition(y=cust_data$Churn,p=0.8,list=FALSE)
training<-cust_data[intrain,]
testing<-cust_data[-intrain,]
nrow(training)
nrow(testing)
View(testing)
set.seed(1234)
intrain<-createDataPartition(y=cust_data$Churn,p=0.8,list=FALSE)
training<-cust_data[intrain,]
testing<-cust_data[-intrain,]
set.seed(1234)
intrain<-createDataPartition(y=cust_data$Churn,p=0.8,list=FALSE, times = 1)
training<-cust_data[intrain,]
testing<-cust_data[-intrain,]
fullMod = glm(Churn ~ ., data= cust_data, family= binomial)
summary(fullMod)
intMod <- glm(chrun ~ 1, data= cust_data, family= binomial)
summary(intMod)
fwdSelection = step(intMod, scope=list(lower=formula(intMod),upper=formula(fullMod)), direction="forward")
formula(fwdSelection)
summary(fwdSelection)
fullMod = glm(Churn ~ ., data= cust_data, family= binomial)
summary(fullMod)
intMod <- glm(Churn ~ 1, data= cust_data, family= binomial)
summary(intMod)
fwdSelection = step(intMod, scope=list(lower=formula(intMod),upper=formula(fullMod)), direction="forward")
formula(fwdSelection)
summary(fwdSelection)
fullMod = glm(Churn ~ ., data= training, family= binomial)
summary(fullMod)
intMod <- glm(Churn ~ 1, data= training, family= binomial)
summary(intMod)
fwdSelection = step(intMod, scope=list(lower=formula(intMod),upper=formula(fullMod)), direction="forward")
formula(fwdSelection)
summary(fwdSelection)
logic_reg <- glm(Churn ~ Contract + InternetService + tenure + PaperlessBilling+TotalCharges + MultipleLines + PaymentMethod +SeniorCitizen + StreamingTV + OnlineSecurity + TechSupport + StreamingMovies + MonthlyCharges + PhoneService + Dependents, data=training, family=binomial)
summary(logic_reg)
influencePlot(logic_reg,	id.method="identify", main="Influence Plot", sub="Circle size is proportial to Cook's Distance" )
InfluenceIndexPlot(logic_reg,	id.method="identify", main="Influence Plot", sub="Circle size is proportial to Cook's Distance" )
library(car)
influenceIndexPlot(logic_reg, id.n = 3 )
influenceIndexPlot(logic_reg, vars=c("cook","hat"), id.n = 3 )
influenceIndexPlot(logic_reg, vars=c("cook","hat"), id.n = 3 )
influenceIndexPlot(logic_reg, vars=c("cook","hat"), id.n = 3 )
influencePlot(logic_reg,	id.method="identify", main="Influence Plot", sub="Circle size is proportial to Cook's Distance" )
influencePlot(logic_reg,	id.method="identify", main="Influence Plot", sub="Circle size is proportial to Cook's Distance" )
